import json
import sys
import time
from pathlib import Path

import numpy as np
import pandas as pd
from tqdm import tqdm

from .gpt_utils import call_gpt_api



def get_prompt(dct):
    system_prompt = "You will evaluate a LLM text rewrite"
    prompt = \
f'''Given an original text and a rewritten version of it, you will evaluate the quality of the rewrite done by a LLM model based on the given prompt.

Inputs:

Input text: The original text for which the rewrite was done
Rewritten text: The rewritten text generated by a LLM model
Prompt: The prompt used to generate the rewritten text

You will output a boolean value indicating if the rewritten text is a valid and coherent rewrite of the original text based on the prompt.

- True: The rewritten text is a valid and coherent rewrite of the original text given the prompt
- False: The rewritten text is NOT a valid or coherent rewrite of the original text given the prompt

Pay attention to the content and the specific wording used in the original text. Try to identify if the rewritten text is a valid and coherent rewrite of the original text given the prompt.

Only output a boolean value, True or False, as the evaluation of the rewrite quality. I will parse your output exactly as it is.

Input text:
""""""
{dct["original_text"]}
""""""

Rewritten text:
""""""
{dct["rewritten_text"]}
""""""

Prompt:
""""""
{dct["rewrite_prompt"]}
""""""
'''

    function_dct = {
        "name": "rewrite_evaluation",
        "description": "Evaluate the quality of a LLM text rewrite",
        "parameters": {
            "type": "object",
            "properties": {
                "is_well_written": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the rewritten text is a valid and coherent rewrite of the original text"
                },
            },
            "required": ["is_well_written"],
        },
    }

    return system_prompt, prompt, function_dct


input_path = Path("/kaggle/input/gemma_rewritten_text_exllama/proc_dataset_updated.csv")
output_path = Path("/kaggle/input/gemma_rewritten_text_exllama/proc_dataset_updated_evaluated.csv")

data = pd.read_csv(input_path)
is_well_written_list = []

# data = data.head(10)

for idx, row in tqdm(data.iterrows(), total=len(data)):
    system_prompt, prompt, function_dct = get_prompt(row)
    response = call_gpt_api(prompt, system_prompt=system_prompt, function_dct=function_dct, temperature=0.1)
    
    if "is_well_written" not in response:
        is_well_written_list.append(False)
        print("Error:\n\n", prompt)
        continue

    try:
        is_well_written = bool(response["is_well_written"])
    except:
        print("Error:\n\n", prompt, "\n", response)
        is_well_written_list.append(False)
        continue

    is_well_written_list.append(is_well_written)

data["is_well_written"] = is_well_written_list
data.to_csv(output_path, index=False)
